# Generated from musik.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,24,180,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,0,1,0,1,1,1,
        1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,
        1,16,1,16,1,16,1,16,1,16,1,17,1,17,5,17,131,8,17,10,17,12,17,134,
        9,17,1,18,1,18,3,18,138,8,18,1,18,1,18,5,18,142,8,18,10,18,12,18,
        145,9,18,3,18,147,8,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,
        20,1,20,1,21,1,21,1,21,1,21,5,21,163,8,21,10,21,12,21,166,9,21,1,
        21,1,21,1,22,4,22,171,8,22,11,22,12,22,172,1,22,1,22,1,23,1,23,1,
        23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,1,0,6,1,0,97,122,4,0,48,57,65,90,95,95,97,122,1,0,
        49,57,1,0,48,57,2,0,10,10,13,13,2,0,9,10,32,32,185,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,3,53,1,0,0,0,5,55,
        1,0,0,0,7,60,1,0,0,0,9,62,1,0,0,0,11,64,1,0,0,0,13,66,1,0,0,0,15,
        68,1,0,0,0,17,70,1,0,0,0,19,72,1,0,0,0,21,74,1,0,0,0,23,83,1,0,0,
        0,25,95,1,0,0,0,27,99,1,0,0,0,29,111,1,0,0,0,31,117,1,0,0,0,33,122,
        1,0,0,0,35,128,1,0,0,0,37,146,1,0,0,0,39,148,1,0,0,0,41,152,1,0,
        0,0,43,158,1,0,0,0,45,170,1,0,0,0,47,176,1,0,0,0,49,50,5,108,0,0,
        50,51,5,101,0,0,51,52,5,116,0,0,52,2,1,0,0,0,53,54,5,61,0,0,54,4,
        1,0,0,0,55,56,5,108,0,0,56,57,5,111,0,0,57,58,5,111,0,0,58,59,5,
        112,0,0,59,6,1,0,0,0,60,61,5,123,0,0,61,8,1,0,0,0,62,63,5,125,0,
        0,63,10,1,0,0,0,64,65,5,42,0,0,65,12,1,0,0,0,66,67,5,47,0,0,67,14,
        1,0,0,0,68,69,5,37,0,0,69,16,1,0,0,0,70,71,5,43,0,0,71,18,1,0,0,
        0,72,73,5,45,0,0,73,20,1,0,0,0,74,75,5,115,0,0,75,76,5,105,0,0,76,
        77,5,110,0,0,77,78,5,95,0,0,78,79,5,119,0,0,79,80,5,97,0,0,80,81,
        5,118,0,0,81,82,5,101,0,0,82,22,1,0,0,0,83,84,5,115,0,0,84,85,5,
        113,0,0,85,86,5,117,0,0,86,87,5,97,0,0,87,88,5,114,0,0,88,89,5,101,
        0,0,89,90,5,95,0,0,90,91,5,119,0,0,91,92,5,97,0,0,92,93,5,118,0,
        0,93,94,5,101,0,0,94,24,1,0,0,0,95,96,5,109,0,0,96,97,5,105,0,0,
        97,98,5,120,0,0,98,26,1,0,0,0,99,100,5,112,0,0,100,101,5,105,0,0,
        101,102,5,116,0,0,102,103,5,99,0,0,103,104,5,104,0,0,104,105,5,95,
        0,0,105,106,5,115,0,0,106,107,5,104,0,0,107,108,5,105,0,0,108,109,
        5,102,0,0,109,110,5,116,0,0,110,28,1,0,0,0,111,112,5,115,0,0,112,
        113,5,108,0,0,113,114,5,101,0,0,114,115,5,101,0,0,115,116,5,112,
        0,0,116,30,1,0,0,0,117,118,5,112,0,0,118,119,5,108,0,0,119,120,5,
        97,0,0,120,121,5,121,0,0,121,32,1,0,0,0,122,123,5,112,0,0,123,124,
        5,114,0,0,124,125,5,105,0,0,125,126,5,110,0,0,126,127,5,116,0,0,
        127,34,1,0,0,0,128,132,7,0,0,0,129,131,7,1,0,0,130,129,1,0,0,0,131,
        134,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,133,36,1,0,0,0,134,132,
        1,0,0,0,135,147,5,48,0,0,136,138,5,45,0,0,137,136,1,0,0,0,137,138,
        1,0,0,0,138,139,1,0,0,0,139,143,7,2,0,0,140,142,7,3,0,0,141,140,
        1,0,0,0,142,145,1,0,0,0,143,141,1,0,0,0,143,144,1,0,0,0,144,147,
        1,0,0,0,145,143,1,0,0,0,146,135,1,0,0,0,146,137,1,0,0,0,147,38,1,
        0,0,0,148,149,5,105,0,0,149,150,5,110,0,0,150,151,5,116,0,0,151,
        40,1,0,0,0,152,153,5,115,0,0,153,154,5,111,0,0,154,155,5,117,0,0,
        155,156,5,110,0,0,156,157,5,100,0,0,157,42,1,0,0,0,158,159,5,45,
        0,0,159,160,5,45,0,0,160,164,1,0,0,0,161,163,8,4,0,0,162,161,1,0,
        0,0,163,166,1,0,0,0,164,162,1,0,0,0,164,165,1,0,0,0,165,167,1,0,
        0,0,166,164,1,0,0,0,167,168,6,21,0,0,168,44,1,0,0,0,169,171,7,5,
        0,0,170,169,1,0,0,0,171,172,1,0,0,0,172,170,1,0,0,0,172,173,1,0,
        0,0,173,174,1,0,0,0,174,175,6,22,0,0,175,46,1,0,0,0,176,177,7,4,
        0,0,177,178,1,0,0,0,178,179,6,23,0,0,179,48,1,0,0,0,7,0,132,137,
        143,146,164,172,1,6,0,0
    ]

class musikLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    ID = 18
    NUM = 19
    INT_TYPE = 20
    SOUND_TYPE = 21
    COMMENT = 22
    WS = 23
    NEW_LINE = 24

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'let'", "'='", "'loop'", "'{'", "'}'", "'*'", "'/'", "'%'", 
            "'+'", "'-'", "'sin_wave'", "'square_wave'", "'mix'", "'pitch_shift'", 
            "'sleep'", "'play'", "'print'", "'int'", "'sound'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUM", "INT_TYPE", "SOUND_TYPE", "COMMENT", "WS", "NEW_LINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "ID", "NUM", "INT_TYPE", "SOUND_TYPE", 
                  "COMMENT", "WS", "NEW_LINE" ]

    grammarFileName = "musik.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


